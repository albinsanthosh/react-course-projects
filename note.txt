npm install -g yarn

emmet pulgin - autocomplete (writing title and tab)

yarn global add live-server

command to start live server
live-server public

CDN script src
react
https://unpkg.com/react@16.0.0/umd/react.development.js
react-dom (to render to dom)
https://unpkg.com/react-dom@16.0.0/umd/react-dom.development.js

Check in developer Console on browser variables React, ReactDOM. It will be defined.

babeljs.io

var template = <h1>This is JSX from app.js!></h1>

var template = React.createElement(
    "h1", 
    {id: "someid"},
    "Something New"
);

babel is a compiler, needs plugins and presets
presets - react, env(es6, es7 features)

yarn global add babel-cli@6.24.1
npm install -g babel-cli@6.24.1

yarn init
yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

app.js in src contains code written by us, app.js in scripts contain autogenerated compiled jsx code

For compiling of jsx
babel src/app.js --out-file=public/scripts/app.js --presets=env,react

Automaticaly recompile in case of change
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch

node_modules can be deleted and regenerated
command to regenerate
yarn install

root element should be a single element

var template = (
    <div>
        <h1>Indecision App</h1>
        <p>This is some info</p>
        <ol>
            <li>Item one</li>
            <li>Item two</li>
        </ol>
    </div>
);

Dynamic data
object - {app.title}
variable - {title}

undefined , boolean, null are ignored by JSX

var based variable can be reassigned as well as redefined
let based variable can be reassigned but not redefined
const based variable cannot be reassigned or redefined

var variable are function scoped. const and let are also same. 
const and let are also block scoped but var is not.

If doesn't reassign then use const, else use let

es6 arrow function are annonymous, we need to assign to variable

arguments keyword no longer available in arrow function

this keyword - no longer bound in es5 function inside function, but work in arrow function
but arrow function not to be used in object property defination. 
New synatx for method defination
onst user = {
    name: 'Andrew',
    cities: ['Philadelphia', 'New York', 'Dublin'],
    printPlacesLived(){
        this.cities.forEach((city) => {
            console.log(this.name + ' has lived in ' + city);
        })
    }
};

map helps transform getting a new array back, unlike in forEach we can only perform something

Some property like id remain same while some like class is className in JSX

JSX does not have built in data binding

Need to rerender for dynamic display

React is super efficient, it has dom algorithm to correctly render with only the minimum change. (Elements tab rerender highlight)

----Forms and inputs----
Synthetic Events
Form Events

Handling client side javascript

To prevent full page reload on form submit event
e.preventDefault();

Just reference don't call, or it will try to use return value

To get the submitted value, option here is element name
e.target.elements.option.value

-----Arrays in JSX-----
For arrays of JSX we need to add key prop

comment in Jsx {/* comment */}

-----Picking an option-----
Math.random() - generates a random number between 0 & 1, can be multiplied to increase range