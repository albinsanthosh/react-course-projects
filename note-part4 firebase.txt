firebase.google.com
database, authentication

rules 
read, wirte set to true

Add firebase to web app
config object used

yarn add firebase@4.2.0

src\firebase\firebase.js

import * as firebase from 'firbase';
dumps all the named exports to variable firebase

Add import in app.js
import './firebase/firebase'

----- Writing to the Database -----
.ref()
Gives a reference to database
reference to the root of database

.set()
to set the value
overwrite

database.ref('age').set(27);
access only age

database.ref('location/city').set('New York');
access location/city

The set sends a request to change the data.

----- E6 Promises -----
resolve - Everthying went well
reject - There is something wrong

Call back registered in promise.then.
resolve data can be printed.

Resolve or reject single time.

When reject, use .catch() block

resolve - then()
reject - catch()

promise.then((data) => {
    console.log('1', data);
}).catch((error) => {
    console.log('error', error);
});

Instead of writing catch, we can use it as 2nd argument of then also. 

promise.then((data) => {
    console.log('1', data);
}, (error) => {
    console.log('error', error);
});

----- Removing from database -----
database.ref('isSingle').remove().then(() => {
    console.log('Data was removed');
}).catch((e) => {
    console.log('Did not remove data', e);
})

passing set as null behaves as remove
database.ref('isSingle').set(null);

documentation
https://firebase.google.com/docs/reference/js/database.md?authuser=0&hl=en#functions

----- Updating data -----
database.ref().update({
    stressLevel: 9,
    'job/company': 'Amazon',
    'location/city': 'Seattle'
});

Normall update at root level
For child level need use quotes and /
Supports promises

----- Fetching Data from Firebase -----
2 ways
Fetch single time
Fetch subscription based

once 
returns snapshot

on
subscribe to changes
use callback function

to unsubscribe
off
database.ref().off(onValueChange);

----- Array data in Firebase -----
push
generate id and add data

DataSnapshot
https://firebase.google.com/docs/reference/js/database.datasnapshot?hl=en&authuser=0

events
child_removed
child_changed
child_added(for existing as well as new data)

----- Asynchronous Redux Actions -----
Previous
// components calls action generator
// action generator returns object
// component dispatches object
// redux store changes

Changed
// components calls action generator
// action generator returns fucntion
// component dispatches fucntion (?)
// function runs (has the ability to dispatch other actions and do whatever it wants)

dispatch function
redux-thunk

yarn add redux-thunk@2.2.0

import applyMiddleware from redux

src\store\configureStore.js
src\firebase\firebase.js
src\actions\expenses.js
src\components\AddExpensePage.js

For testing
redux-mock-store
yarn add redux-mock-store@1.2.3

Promise chaining

For wait till call reaches till done() moment.
done argument
done()

getActions
clearActions